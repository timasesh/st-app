class WheelOfFortune {
    constructor() {
        this.wheel = document.getElementById('wheel');
        this.spinBtn = document.getElementById('spinBtn');
        this.result = document.getElementById('result');
        this.prizeDisplay = document.getElementById('prizeDisplay');
        this.particles = document.getElementById('particles');
        
        this.isSpinning = false;
        this.currentRotation = 0; // –¢–µ–∫—É—â–∏–π —É–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞ –∫–æ–ª–µ—Å–∞
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ–∫—Ç–æ—Ä—ã —Å —Ç–æ—á–Ω—ã–º–∏ —É–≥–ª–∞–º–∏ (–ø—Ä–æ—Ç–∏–≤ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–∏)
        this.sectors = [
            { center: 0, range: [-25.7, 25.7], prize: "1‚≠ê" },      // 1 –∑–≤–µ–∑–¥–∞
            { center: 51.43, range: [25.7, 77.1], prize: "4‚≠ê" },   // 4 –∑–≤–µ–∑–¥—ã
            { center: 102.86, range: [77.1, 128.6], prize: "0‚≠ê" }, // –ø—É—Å—Ç–æ
            { center: 154.29, range: [128.6, 180.0], prize: "3‚≠ê" }, // 3 –∑–≤–µ–∑–¥—ã
            { center: 205.71, range: [180.0, 231.4], prize: "0‚≠ê" }, // –ø—É—Å—Ç–æ
            { center: 257.14, range: [231.4, 282.9], prize: "0‚≠ê" }, // –ø—É—Å—Ç–æ
            { center: 308.57, range: [282.9, 334.3], prize: "2‚≠ê" }  // 2 –∑–≤–µ–∑–¥—ã
        ];
        
        this.init();
    }
    
    init() {
        this.bindEvents();
        this.createParticles();
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏–∑ –ø–æ —É–≥–ª—É –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    getPrizeByAngle(angle) {
        // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —É–≥–æ–ª –¥–æ 0-360
        const normalizedAngle = ((angle % 360) + 360) % 360;
        
        for (let sector of this.sectors) {
            let [start, end] = sector.range;
            
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ –¥–∏–∞–ø–∞–∑–æ–Ω –ø–µ—Ä–µ—Å–µ–∫–∞–µ—Ç 0¬∞
            if (start < 0) {
                if (normalizedAngle >= start + 360 || normalizedAngle <= end) {
                    return sector.prize;
                }
            } else {
                if (normalizedAngle >= start && normalizedAngle <= end) {
                    return sector.prize;
                }
            }
        }
        
        // –ï—Å–ª–∏ –Ω–µ –ø–æ–ø–∞–ª–∏ –Ω–∏ –≤ –æ–¥–∏–Ω —Å–µ–∫—Ç–æ—Ä, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤—ã–π (1 –∑–≤–µ–∑–¥–∞)
        return "1‚≠ê";
    }
    
    bindEvents() {
        this.spinBtn.addEventListener('click', () => this.spin());
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
        this.spinBtn.addEventListener('mouseenter', () => {
            this.playHoverSound();
        });
    }
    
    spin() {
        if (this.isSpinning) return;
        
        this.isSpinning = true;
        this.spinBtn.disabled = true;
        this.result.classList.remove('show');
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —É–≥–æ–ª –æ—Ç 0 –¥–æ 360
        const randomAngle = Math.random() * 360;
        
        // –ö–æ–ª–µ—Å–æ –¥–µ–ª–∞–µ—Ç 5 –ø–æ–ª–Ω—ã—Ö –æ–±–æ—Ä–æ—Ç–æ–≤ + —Å–ª—É—á–∞–π–Ω—ã–π —É–≥–æ–ª
        const fullRotations = 5 * 360; // 5 –ø–æ–ª–Ω—ã—Ö –æ–±–æ—Ä–æ—Ç–æ–≤
        const totalRotation = fullRotations + randomAngle;
        
        // –§–∏–Ω–∞–ª—å–Ω—ã–π —É–≥–æ–ª = —Ç–µ–∫—É—â–∏–π + –ø–æ–ª–Ω—ã–µ –æ–±–æ—Ä–æ—Ç—ã + —Å–ª—É—á–∞–π–Ω—ã–π —É–≥–æ–ª
        const finalRotation = this.currentRotation + totalRotation;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏–∑ –ø–æ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —É–≥–ª—É
        const finalAngle = (finalRotation % 360);
        const selectedPrize = this.getPrizeByAngle(finalAngle);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è
        this.wheel.style.transition = 'transform 4s cubic-bezier(0.23, 1, 0.32, 1)';
        this.wheel.style.transform = `rotate(${finalRotation}deg)`;
        
        // –ó–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç –≤—Ä–∞—â–µ–Ω–∏—è
        this.playSpinSound();
        
        // –≠—Ñ—Ñ–µ–∫—Ç —á–∞—Å—Ç–∏—Ü –≤–æ –≤—Ä–µ–º—è –≤—Ä–∞—â–µ–Ω–∏—è
        this.createSpinParticles();
        
        setTimeout(() => {
            this.isSpinning = false;
            this.spinBtn.disabled = false;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —É–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞ (–∞–±—Å–æ–ª—é—Ç–Ω—ã–π —É–≥–æ–ª)
            this.currentRotation = finalRotation;
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            this.showResult(selectedPrize);
            
            // –ó–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            if (selectedPrize === "0‚≠ê") {
                this.playLoseSound();
            } else {
                this.playWinSound();
                this.createWinParticles();
            }
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä (–µ—Å–ª–∏ –µ—Å—Ç—å Django)
            this.sendResultToServer(selectedPrize);
            
        }, 4000);
    }
    
    showResult(prize) {
        let resultText = '';
        let resultClass = '';
        
        switch (prize) {
            case "0‚≠ê":
                resultText = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–∏–≥—Ä–∞–ª–∏ üòî';
                resultClass = 'lose';
                break;
            case "1‚≠ê":
                resultText = '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 1 –∑–≤–µ–∑–¥—É! üéâ';
                resultClass = 'win';
                break;
            case "2‚≠ê":
                resultText = '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 2 –∑–≤–µ–∑–¥—ã! üéâ';
                resultClass = 'win';
                break;
            case "3‚≠ê":
                resultText = '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 3 –∑–≤–µ–∑–¥—ã! üéâ';
                resultClass = 'win';
                break;
            case "4‚≠ê":
                resultText = '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 4 –∑–≤–µ–∑–¥—ã! üéâ';
                resultClass = 'win';
                break;
            default:
                const starCount = prize.replace('‚≠ê', '');
                resultText = `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${starCount} ${this.getStarWord(parseInt(starCount))}! üéâ`;
                resultClass = 'win';
                break;
        }
        
        this.prizeDisplay.innerHTML = resultText;
        this.prizeDisplay.className = resultClass;
        this.result.classList.add('show');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∫ –∫–Ω–æ–ø–∫–µ
        this.spinBtn.classList.add('win-animation');
        setTimeout(() => {
            this.spinBtn.classList.remove('win-animation');
        }, 500);
    }
    
    getStarWord(count) {
        if (count === 1) return '–∑–≤–µ–∑–¥—É';
        if (count >= 2 && count <= 4) return '–∑–≤–µ–∑–¥—ã';
        return '–∑–≤–µ–∑–¥';
    }
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä (–¥–ª—è Django)
    sendResultToServer(prize) {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å AJAX –∑–∞–ø—Ä–æ—Å –∫ Django
        console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä: ${prize}`);
        
        // –ü—Ä–∏–º–µ—Ä AJAX –∑–∞–ø—Ä–æ—Å–∞:
        /*
        fetch('/spin_wheel/', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRFToken': getCookie('csrftoken')
            },
            body: JSON.stringify({
                prize: prize,
                index: index,
                timestamp: Date.now()
            })
        })
        .then(response => response.json())
        .then(data => {
            console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', data);
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', error);
        });
        */
    }
    
    createParticles() {
        setInterval(() => {
            if (!this.isSpinning) {
                const particle = document.createElement('div');
                particle.className = 'particle';
                particle.style.left = Math.random() * 100 + '%';
                particle.style.animationDuration = (Math.random() * 2 + 2) + 's';
                particle.style.opacity = Math.random() * 0.5 + 0.5;
                
                this.particles.appendChild(particle);
                
                setTimeout(() => {
                    particle.remove();
                }, 5000);
            }
        }, 300);
    }
    
    createSpinParticles() {
        const interval = setInterval(() => {
            if (this.isSpinning) {
                for (let i = 0; i < 3; i++) {
                    const particle = document.createElement('div');
                    particle.className = 'particle';
                    particle.style.left = (50 + (Math.random() - 0.5) * 20) + '%';
                    particle.style.top = (50 + (Math.random() - 0.5) * 20) + '%';
                    particle.style.animationDuration = '1s';
                    particle.style.background = ['#ffd700', '#ff6b6b', '#4ecdc4'][Math.floor(Math.random() * 3)];
                    
                    this.particles.appendChild(particle);
                    
                    setTimeout(() => {
                        particle.remove();
                    }, 1000);
                }
            } else {
                clearInterval(interval);
            }
        }, 100);
    }
    
    createWinParticles() {
        for (let i = 0; i < 20; i++) {
            setTimeout(() => {
                const particle = document.createElement('div');
                particle.className = 'particle';
                particle.style.left = (50 + (Math.random() - 0.5) * 40) + '%';
                particle.style.top = (50 + (Math.random() - 0.5) * 40) + '%';
                particle.style.animationDuration = '2s';
                particle.style.background = '#ffd700';
                particle.style.width = '6px';
                particle.style.height = '6px';
                
                this.particles.appendChild(particle);
                
                setTimeout(() => {
                    particle.remove();
                }, 2000);
            }, i * 50);
        }
    }
    
    // –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã (–∏—Å–ø–æ–ª—å–∑—É–µ–º Web Audio API)
    playHoverSound() {
        this.playTone(800, 0.1, 0.1);
    }
    
    playSpinSound() {
        this.playTone(400, 0.3, 4);
    }
    
    playWinSound() {
        this.playTone(600, 0.2, 0.5);
        setTimeout(() => this.playTone(800, 0.2, 0.5), 100);
        setTimeout(() => this.playTone(1000, 0.2, 0.5), 200);
    }
    
    playLoseSound() {
        this.playTone(200, 0.3, 1);
    }
    
    playTone(frequency, volume, duration) {
        try {
            const audioContext = new (window.AudioContext || window.webkitAudioContext)();
            const oscillator = audioContext.createOscillator();
            const gainNode = audioContext.createGain();
            
            oscillator.connect(gainNode);
            gainNode.connect(audioContext.destination);
            
            oscillator.frequency.value = frequency;
            oscillator.type = 'sine';
            
            gainNode.gain.setValueAtTime(volume, audioContext.currentTime);
            gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + duration);
            
            oscillator.start(audioContext.currentTime);
            oscillator.stop(audioContext.currentTime + duration);
        } catch (error) {
            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∞—É–¥–∏–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç)
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è CSRF —Ç–æ–∫–µ–Ω–∞ (–¥–ª—è Django)
function getCookie(name) {
    let cookieValue = null;
    if (document.cookie && document.cookie !== '') {
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i].trim();
            if (cookie.substring(0, name.length + 1) === (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    new WheelOfFortune();
    
    // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø–∞—Ä–∞–ª–ª–∞–∫—Å–∞ –¥–ª—è —Ñ–æ–Ω–∞
    document.addEventListener('mousemove', (e) => {
        const moveX = (e.clientX - window.innerWidth / 2) * 0.01;
        const moveY = (e.clientY - window.innerHeight / 2) * 0.01;
        
        document.body.style.backgroundPosition = `${moveX}px ${moveY}px`;
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–æ–ª–µ—Å–æ
    document.getElementById('wheel').addEventListener('click', () => {
        if (!document.querySelector('.wheel').classList.contains('spinning')) {
            const ripple = document.createElement('div');
            ripple.style.position = 'absolute';
            ripple.style.width = '20px';
            ripple.style.height = '20px';
            ripple.style.borderRadius = '50%';
            ripple.style.background = 'rgba(255, 215, 0, 0.6)';
            ripple.style.pointerEvents = 'none';
            ripple.style.animation = 'ripple 0.6s linear';
            
            document.querySelector('.wheel-container').appendChild(ripple);
            
            setTimeout(() => {
                ripple.remove();
            }, 600);
        }
    });
});

// –î–æ–±–∞–≤–ª—è–µ–º CSS –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ ripple
const style = document.createElement('style');
style.textContent = `
    @keyframes ripple {
        to {
            transform: scale(20);
            opacity: 0;
        }
    }
`;
document.head.appendChild(style);
